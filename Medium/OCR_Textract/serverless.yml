service: "textract-service"

package:
  individually: true
  patterns:
    - 'requirements.txt'
    - 'lambda_logic.py'
    - '!node_modules/**'
    - '!venv/**'
    - '!.serverless/**'
    - '!.serverless_plugins/**'
    - '!.git/**'
    - '!.gitignore'
    - '!.DS_Store'
    - '!npm-debug.log'
    

provider:
  name: aws
  runtime: python3.8
  timeout: 30
  memorySize: 512
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
        - "iam:GetRole"
        - "ses:SendEmail"
        - "appconfig:GetConfiguration"
        - "sagemaker:StartHumanLoop"
        - "s3:GetObject"
        - "s3:PutObject"
        - "s3:ListBucket"
        - "ssm:GetParameter"
        - "textract:AnalyzeDocument"
      Resource: "*"
  environment:
    PRIMARY_REGION: ${AWS::Region}

functions:
  send-to-textract:
    handler: lambda_logic.send_from_s3_to_textract
    layers:
      - arn:aws:lambda:${aws:region}:${aws:accountId}:layer:Boto3Layer:1
      - arn:aws:lambda:${aws:region}:${aws:accountId}:layer:Poppler:1
    events:
      - s3:
          bucket: surgery-forms
          event: s3:ObjectCreated:*
          rules:
            - prefix: inbox/
            - suffix: .pdf
          existing: true

    provisionedConcurrency: 1 # optional, Count of provisioned lambda instances
    reservedConcurrency: 10 # optional, reserved concurrency limit for this function. By default, AWS uses account concurrency limit

plugins:
  - serverless-python-requirements

custom:
   pythonRequirements:
     dockerizePip: non-linux
